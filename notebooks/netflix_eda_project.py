# -*- coding: utf-8 -*-
"""Netflix_EDA_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u6q6fKyv2r6cZd5_aQIyLI0AqPo_9MYQ

## Netflix_EDA_Project

Questions:

1.What's the trend of the number of contents published by Netflix? (Is there a increase?)

2.Which country/region has the largest number of contents?

3.What's the ratio of movies to TV series? Any change in the trend?

4.What are the most popular genres?

5.In which months does Netflix publish the largest number of new contents? Is there a holiday peak?

6.What's the distribution of the length of contents? (Short or long ?)
"""

import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv('netflix_titles.csv')
df.head()

# 0.pre-preparation
# Dataset Information
df.info()
print('\nMissing values:\n',df.isnull().sum())

# check duplicates
dup = df.duplicated()
df[dup]

# date conversion & extraction
df['date'] = pd.to_datetime(df['date_added'].str.strip(), format='%B %d, %Y', errors='coerce')
# format = the format of initial data
# errors='coerce' --> when cannot extract, no error but fillin NaT (Not a Time)
df['year'] = df['date'].dt.year.astype('Int64')
df['month'] = df['date'].dt.month.astype('Int64')
#.dt.year: datetime accessor, extract information from datetime
df.head()

df.info()

"""# 1.What's the trend of the number of contents published by Netflix?


1.   Has the number of Netflix contents increased over the years?
2.   Which years were the most active?
3.   Was there any change during the COVID-19 pandemic(2020)?
"""

# Q1 Clean the data
# notice some null value in year, check if it's reasonable to use release_year to replace null
valid = df.dropna(subset=['year','release_year'])
diff = (valid['year'] - valid['release_year']).value_counts().sort_index()
plt.plot(diff);

# some negative diff, it's impossible to release a content before it first released
# correct all year earlier than release_year to release_year
df.loc[df['year']<df['release_year'],'year'] = df['release_year']
valid = df.dropna(subset=['year','release_year'])
diff = (valid['year'] - valid['release_year']).value_counts().sort_index()
plt.plot(diff);

diff

# from the simple analysis, we can see most of the year are within 0-1 year after release_year
# so we can fill the null year values (and release_year exists) with release_year
df.loc[df['year'].isna() & df['release_year'].notna(),'year'] = df['release_year']
assert df['year'].isna().sum() == 0

# Q1 Start analyzing
yearly_counts = df.value_counts('year').sort_index()
yearly_counts

# Q1 Visualization
yearly_counts.index = yearly_counts.index.astype(int)
plt.figure(figsize=(10,5))
sns.lineplot(x=yearly_counts.index,y=yearly_counts.values,marker='o')
plt.xticks(yearly_counts.index)
plt.title('Netflix Titles Added Per Year')
plt.xlabel('Year')
plt.ylabel('Number of Titles')
plt.grid(True)
plt.tight_layout();

"""# Answer to Q1

1.Has the number of Netflix contents increased over the years?



*   Yes, the number of titles added to Netflix shows a clear upward trend from around 2014 to 2019. Even though this trend declined after 2019, the sharp increase during 2008 - 2019 reflects Netflix's remarkable expansion.


2.Which years were the most active?



*   2019 and 2020 were the peak years with the highest number of new titles added. This pattern may suggest a strategic effort by Netflix to increase its content library before the global pandemic hit in 2020.



3.Was there any change during the COVID-19 pandemic(2020)?



*   Yes. In 2020, there is a noticeable declinee in the number of new titles added compared to 2019. This could be attributed to the COVID-19 pandemic, ehich disrupted global filming schedules, production pipelines, and international releases.


# **Interpretation Summary**

The dataset generlly reveals a rapid growth in Netflix content additions leading up to 2019, with a possible strategic expansion pause.

The sudden drop in 2020 may align with the timeline of the COVID-19 pandemic, suggesting external disruptions in the content production pipeline.

# 2.Which country/region has the largest number of contents?


1.   Which country/region has the largest number of contents?
2.   Whether there is a regional concentration of contents (eg. Is the U.S. far ahead)?
"""

# Q2 Clean the data
df.loc[df['country'].isna(),'year'].value_counts()
#df['country'].value_counts(dropna=True)

# drop null values
df_country = df.dropna(subset=['country'])

# cope with multiple countries
# make the one data point a list, with multiple country names in it
df_country_split = df_country.assign(country=df_country['country'].str.split(','))
# explode the list to multiple rows
df_country_exploded = df_country_split.explode('country')
df_country_exploded['country'] =  df_country_exploded['country'].str.strip()

df_country_exploded[['title','country']]

# Q2 Start analyzing
country_counts = df_country_exploded['country'].value_counts()
country_top10 = country_counts.head(10).reset_index()
country_top10.columns = ['country','count']

country_top10

# Q2 Visualization
plt.figure(figsize=(10,6))
sns.barplot(data = country_top10,
            x='country',
            y='count',
            hue='country',
            palette='viridis')
plt.title('Top 10 Countries by Number of Netflix Titles')
plt.xlabel('Country')
plt.ylabel('Number of Titles')
plt.xticks(rotation=30)
plt.tight_layout();

"""# Answer to Q2

After Processing the dataset and splitting multi_country entries, we found that:



*   The United States has by far the most content on Netflix, with over 3,500 titles
*   Other countries with large number of titles include India, United Kingdom, Canada, France, etc.

#**Interpretation Summary**

This distribution reflects Netflix's strong presence in English-speaking  markets and in major media-producing countries. The dominance of the U.S. may also stem from its large entertainment industry and the platform's origin as a U.S.-based company.

India's high count suuggests a focus on the growing South Asian market and the popularity of Bollywood productions. The United Kingdom and Canada also have active film industries and long-standing distribution relationships with Netflix.

# 3.What's the ratio of Movies to TV Shows? Any change in the trend?


1.   What's the overall ratio of Movies to TV Shows?
2.   Has the ratio changed over time?
3.   What does the year-by-year data show?
"""

# Q3 Clean data
df['type'].describe()
# no mising value, no unmatching value, no action needed

# Q3 Start analyzing
# overall ratio
type_counts = df['type'].value_counts()

type_counts

# Q3 Visualization1
plt.figure(figsize=(4,4))
plt.pie(
    type_counts,
    labels=type_counts.index,
    autopct='%1.1f%%',
    startangle=90,
    colors=['#1f77b4','#ff7f0e']
)
plt.title('Overall Ratio: Movies vs TV Shows')
plt.axis('equal')
plt.tight_layout();

# yearly trend
# already cleaned the dataset  in Q1
df[df['year'].notna()]['type'].describe()

# count by year
type_trend = df.groupby(['year','type']).size().unstack(fill_value=0)

# calculate the TV/Movie ratio
type_ratio = type_trend['TV Show'] / type_trend['Movie']

# number of titles over years for each type in table
type_table = type_trend
type_table.columns.name = None
type_table = type_trend.rename(columns={'TV Show':'TV Show count','Movie':'Movie Count'})

type_table

#Q3 Visualization2
fig, ax1 = plt.subplots(figsize=(12,6))

# left axis: stacked columns
ax1.bar(type_trend.index, type_trend['Movie'], label='Movie',color='#1f77b4')
ax1.bar(type_trend.index, type_trend['TV Show'], bottom=type_trend['Movie'], label='TV Show', color='#ff7f0e')
ax1.set_xlabel('Year')
ax1.set_ylabel('Number of Titles')
handles, labels = ax1.get_legend_handles_labels()
ax1.legend([handles[1],handles[0]],[labels[1],labels[0]],loc='upper left')

# right axis: line plot of TV Show/Movie
ax2 = ax1.twinx()
ax2.plot(type_trend.index, type_ratio, color='k', marker='o', linestyle='-', linewidth=3, label='TV/Movie Ratio')
ax2.set_ylabel('TV/Movie Ratio')
ax2.legend(loc='upper right')

plt.title('Netflix: Number of Titles vs Movie/TV Ratio')
plt.grid(True)
plt.tight_layout();

"""# Answer to Q3

1.What's the overall ratio of Movies to TV Shows?



*   In total, Movies make up about 69.6%of all titles on Netflix, while TV Shows account for 30.4%.
*   Generally, the number of movies is over double the number od TV Shows. This confirms that Movies have been the dominant content type on the platform.


2.Has the ratio changed over time?



*   Yes -- while Movies have always outnumbered TV Shows, the TV Show share has been gradually increasing, especially after 2018.

*   Between 2015 and 2018, the ratio fluctuated due to spikes in movies releases. Since 2018, the share of TV Shows has risen steadily, reflecting a slow but consistent shift.


3.What does the year-by-year data show?



*   From 2016 to 2019, both Movies and TV Shows grew rapidly, with Movies peaking in 2019 at over 1300 titles. TV Shows also expanded, from about 120 in 2016 to nearly 600 by 2020.

*   From 2009 to 2022, the number of TV Shows has remained consistenly lower than Movies, but the share of TV Shows also shows a steady increase over the years.


# **Interpretation Summary**

Netflix's content catalog has long been movie-dominated, but recent data reveals a progressive shift toward more TV content. After 2018, the share of TV Shows began to rise steadily, reflecting Netflix's growing investment in episodic content and original series.

The fluctuation seen in earlier years are likely due to the limited number of total titles and the less structured content acquisition strategy before Netflix's global expansion gained momentum.

# 4.What are the most popular genres?


1.   What are the top 10 most common genres overall?
2.   Are there differences in genre popularity between Movies and TV Shows?
3.   How have the top genres changed over time?
"""

# Q4 clean the data
# cope with multiple tags in 'listed_in'

df_genre_split = df.assign(listed_in=df['listed_in'].str.split(','))
df_genre_exploded = df_genre_split.explode('listed_in')
df_genre_exploded['listed_in'] = df_genre_exploded['listed_in'].str.strip()

df_genre_exploded[['title','type','listed_in']]

# clean and transform the data (get real genres)
genre_mapping={
    #'International Movies':'International',
    #'International TV Shows':'International',
    'Children & Family Movies':'Children & Family',
    'Anime Series':'Anime',
    'Anime Movies':'Anime',
    'TV Dramas':'Dramas',
    'TV Comedies':'Comedies',
    'TV Sci-Fi & Fantasy':'Sci-Fi & Fantasy',
    'TV Action & Adventure':'Action & Adventure',
    'TV Horror':'Horror',
    'TV Mysteries':'Mysteries',
    'Romantic Movies':'Romance',
    'Romantic TV Shows':'Romance',
    'Crime TV Shows': 'Crime',
    'Anime TV':'Anime',
    'Anime TV Shows':'Anime',
    "Kids' TV": 'Children & Family',
    'Docuseries':'Documentaries',
    'Stand-Up Comedy':'Stand-Up Comedy & Talk Shows',
    'Stand-Up Comedy & Talk Shows':'Stand-Up Comedy & Talk Shows',
    'Horror Movies':'Horror',
    #'British TV Shows': 'International',
    'Reality TV':'Reality Shows',
    'Sports Movies': 'Sports',
    #'Spanish-Language TV Shows':'International',
    #'Korean TV Shows':'International',
    'LGBTQ Movies':'LGBTQ',
    'TV Mysteries':'Mystery',
    'Science & Nature TV':'Science & Nature',
    'Anime Action & Adventure':'Anime',
    'Anime Sci-Fi & Fantasy':'Anime',
    'TV Thriller': 'Thriller',
    'Anime Feature': 'Anime',
    'Teen TV Shows':'Teen'
}
def clean_genre(g):
  return genre_mapping.get(g,'Others')
df_genre_exploded['clean_genre'] = df_genre_exploded['listed_in'].map(clean_genre)

df_genre_exploded[['title','type','clean_genre']]

# remove duplicaets
df_genre_cleaned = df_genre_exploded.drop_duplicates(subset=['title','type','clean_genre'])
df_genre_cleaned[['title','type','clean_genre']]

# count
genre_counts = df_genre_cleaned['clean_genre'].value_counts()
genre_counts

genre_meaningful_counts = genre_counts.drop('Others').sum()
genre_meaningful_counts

"""🔍 **Data Coverage Note: Genre Mapping Completeness**

Out of ~8800 total titles, our genre mapping process successfully categorized 6381 titles into defined genre groups.
The remaining ~2400 records (approximately 27% of the dataset) could not be categorized and were therefore excluded from the genre-based analysis.

These uncategorized records are due to two main reasons:

*    Missing listed_in tags – Some records did not provide any genre label at all.

*    Unconventional or ambiguous genre labels – These included vague or non-informative tags such as 'International', 'Cult', 'British TV', or 'Stand-Up', which could not be mapped to a clear genre group.

⚠️ This means that roughly 1 out of 4 records lacks usable genre information, which may slightly skew the final genre distribution results. For example, genres that tend to be labeled with ambiguous tags (e.g., international documentaries or hybrid shows) might be underrepresented in the analysis.

This limitation reflects typical data quality challenges encountered in real-world datasets and should be clearly acknowledged when interpreting genre trends or making business recommendations.
"""

# get the top 10 most common genres
genre_top10 = genre_counts.drop('Others',errors='ignore').head(10).reset_index()
genre_top10.columns = ['genre','count']
genre_top10

# Q4 Visualization1
plt.figure(figsize=(10,6))
sns.barplot(x=genre_top10['genre'],
            y=genre_top10['count'])
plt.title('Top 10 Most Common Genres')
plt.xlabel('Genre')
plt.ylabel('Count')
plt.xticks(rotation=75)
plt.tight_layout();

# difference between TV Show and Movies in all genres
genre_by_types = df_genre_cleaned.groupby(['clean_genre','type']).size().unstack()
genre_by_types.columns = ['Movie','TV Show']
genre_by_types

# use the top10 subset and analyze the difference in TV Shows and Movies
top_genre_names = genre_top10['genre'].tolist()
genre_by_types_top10 = genre_by_types.loc[top_genre_names]
genre_by_types_top10

# Q4 Visualization2
genre_by_types_top10.plot(kind='bar',figsize=(12,6))
plt.title('Top 10 Genres in Movies vs TV Shows')
plt.ylabel('Count')
plt.xlabel('Genre')
plt.xticks(rotation=45,ha='right')
plt.legend(title='Type')
plt.tight_layout();

# the changes of top5 genres over years
genre_by_years = df_genre_cleaned[['title','year','clean_genre']].groupby(['clean_genre','year']).size().unstack()
#genre_by_years = genre_by_years[df_genre_cleaned['clean_genre']!='Others']
top5_genre_names = top_genre_names[:5]
genre_by_years = genre_by_years.loc[top5_genre_names, 2014:]

"""🔍 **Note: Scope of Genre Trend Visualization**

This chart focuses only on the **top 5 most common genres** to avoid visual clutter caused by too many genre types and overlapping colors.

It also limits the timeline to **2014 onward**, since earlier years (2003–2013) have very sparse data and may distort trend patterns. This is also consistent with the data distribution shown in Question 1.

"""

#colors = sns.color_palette('tab10')
genre_by_years.T.plot(kind='bar',figsize=(12,6))
plt.title("Top 5 Most Popular Genres on Netflix (2015–2021)")
plt.ylabel('Number of Titles Released')
plt.xlabel('Year')
plt.xticks(rotation=0,ha='center')
plt.legend(title='Genre')

plt.tight_layout();

"""# Answer to Q4

1.What are the top 10 most common genres overall?



*   Generally, **Children & Family**, **Romance**, **Dramas**, **Comedies**, **Crime**, **Horror**, **Stand-Up Comedy & Talk Shows**, **Documentaries**, **Reality Shows** and **Sports** are the top 10 most popular genre.
*   **Children & Family**, **Romance** and **Dramas** amounted to 1092, 986 and 763  titles respectively. This suggests a strong focus on family-friendly, emotional, and genre-diverse content across the platform.


2.Are there differences in genre popularity between Movies and TV Shows?



*   Yes -- there are notable distinctions. Typically, among the top 10 most popular genres, **Dramas, Comedies, Crime, Documentaries and Reality Shows are only found in TV Shows**. Meanwhile **Children & Family, Romance, Horror, Stand-Up Comedy & Talk Shows and Sports are predominantly in Movies**.

*   Even though the number of **TV Shows** is generally smaller than the number of Movies, they **span a wider range of genres** (9 out of the top 10) most popular genres, suggesting that **TV Shows serve more diverse audience interests**, where as **Movies tend to focus on mainstream categories** like family and romance.


3.How have the top genres changed over time.



*   We examined trends in the top 5 genres from 2014 to 2021, excluding earlier years due to insufficient data volume. Generally, all top 5 genres experience strong growth from 2014 to 2020, peaking in 2020.

*   **Romance briefly surpassed Children & Family in 2018 and 2019**, but returned to second place afterward.

*    In **2017, Dramas became the most released genre**, while **Crime also exceeded Comedies** in that year.

*   **The trend of all 5 genres is similar with the trend of Netflix added titles per year**, with a decline occured in 2021, possiblt due to production disruptions such as the COVID-19 pandemic.


# **Interpretation Summary**
The data indicates that while Movies remain the dominant content type on Netflix (and also the top 2 genres), TV Shows have carved out a wider genre footprint -- particularly in Drams, Comedies, Crime, etc.

Given the consistent popularity of genres like Children & Family, Romance, and Dramas, The temporary decline post-2020 may reflect external shocks rather than a swift in audience preference. In this point, Netflix may continue investing in these areas across both formats.

📌 Analytical Notes (Q4)

Among ~ 8800 titles, only 6381 were mapped to clear genres.
The remaining ~ 2400 (~ 27%) lacked valid listed_in tags or used ambiguous labels like "International", "Cult", and were excluded from genre-based analysis.

While analyzing genre by content type, I noticed that all “Sports” titles were Movies, with no Sports-related TV Shows — a pattern also seen in other genres like “Crime” and “Documentary”, which contradicts real-world content and suggests labeling limitations in the dataset. A manual check of the raw `listed_in` values confirmed this issue came from the original tags, not analyzing logic.

# 5.What's the monthly pattern of Netflix Content Releases?


1.   What is the overall monthly distribution of new content releases on Netflix?
2.   Are there differences in monthly release patterns between Movies and TV Shows?
3.   Is there a content release peak around global holidays? Do monthly release patterns shift over years?
"""

# Q5 clean the data
df['month'].isna().sum()

df5 = df.dropna(subset=['month'])

# Q5 overall pattern
monthly_count = df5['month'].value_counts().sort_index().reset_index()
monthly_count.columns = ['month','new content releases']
#monthly_count.sort_values('new content releases',ascending=False)
monthly_count

# Q5 Visualization1
monthly_count.plot(kind='bar',x='month',y='new content releases',figsize=(9,6))
plt.title('Monthly Distribution of newly released contents')
plt.xlabel('Month')
plt.ylabel('New Content Releases')
plt.legend().set_visible(False)
plt.xticks(rotation=0)
plt.grid(True)
plt.tight_layout();

# difference in content release patterns between TV Shows and Movies?
# df['type'].isna().sum()
df5[['month','type']].isna().sum()

monthly_type = df5.groupby(['month','type']).size().unstack()
type_ratio = monthly_type['TV Show']/monthly_type['Movie']

display(monthly_type)
display(type_ratio)

# Q5 Visualizatin2
fig, ax = plt.subplots(figsize=(12,6))
ax.bar(monthly_type.index,
       monthly_type['Movie'],label='Movie')
ax.bar(monthly_type.index,
       monthly_type['TV Show'],bottom=monthly_type['Movie'],label='TV Show')
ax.set_xlabel('Month')
ax.set_ylabel('New Content Releases')
ax.legend()

ax2 = ax.twinx()
ax2.plot(monthly_type.index,type_ratio,color='k',
         marker='o',linestyle='-',linewidth=3,
         label='TV/Movie Ratio')
ax2.legend(loc='upper right')
ax2.set_ylim(0.3,0.5)


ax.set_title('Monthly Distribution of New Content Releases: Movies vs TV Shows')
plt.grid(True)
plt.tight_layout();

# holiday content release peak?

# count by year and month
year_monthly_counts = df5.groupby(['year','month']).size().unstack(fill_value=0)
year_monthly_counts

# Q5 Visualization3
plt.figure(figsize=(6,7))
ax = sns.heatmap(year_monthly_counts,cmap='YlOrRd',annot=True,fmt='d')

month_labels = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
ax.set_xticklabels(month_labels,rotation=0);

"""# Answer to Q5

1.What is the overall monthly distribution of new content releases on Netflix?

*   Generally speaking, **July has the largest** number of new content releases with over 800 releases in total. Aside from February, May, November, which content releases are under 700, the rest all have the number of new content releases over 720.
*   Overall, content releases on Netflix are **fairly evenly distributed** throughout the year. In general, **the second half of year** has more new content releases.

2.Are there differences in monthly release patterns between Movies and TV Shows?

*   Yes -- there are notable distinctions. Generally, in every month's new content releases, **the number of Movies exceeds double the number of newly releases TV Shows**. The TV/Movie ratio is around 32.5% to 47.5%.

*   This indicates that while Netflix heavily favors Movies in terms of volume, TV Shows are regularly oubished alongside them, without a storng seasonal bias.


3.Is there a content release peak around global holidays?Do monthly release patterns shift over years?


*   According to the heatmap plot, we can see **two peak time in summer and winter months**, relating to summer holiday and Thanksgiving & Christmas respectively.

*   This pattern is most visiblr from 2017-2020, July and December consistently show darker shades, indicating higher release counts.

*   **No sigificant pattern shifts** were observed. Netflix's monthly releases structure has **remained strategically consistent** over the years. The seasonal and dual-peaks -- summer and holiday season -- have appeared almost every year since 2017, reflecting a stable release strategy.

# **Interpretation Summary**
Netflix appears to follow a **dual-peak seasonal release** strategy, aligning with school breaks in summer (July & August) and winter holidays (November & December). However, the overall monthly distribution remains fairly **balanced**, supporting a long-term goal of **consistent content availability**. There is no clear evidence of a shift in strategy over time -- Netflix's approach seems to be both **stable and holiday-aware**.

While the number of TV Shows is always lower than Movies, they are released in tandem every month, indicating Netflix's commitment to maintaining a diverse type of contents.

# 6.What's the distribution of the length of contents? (Short or long ?)


1.   What is the overall distribution of content durations?
2.   Are there differences between Movies and TV Shows in terms of length?
3. Are there extreme outliers or short-form content (like under 30 min)?
"""

# Q6 clean the data
df['duration'].isna().sum()

# check the records with missing duration
df[df['duration'].isna()]
# our missing values are in 'rating'

df_6 = df.fillna({'duration':df['rating']})
df_6.iloc[[5541,5794,5813],:]

assert df_6['duration'].isna().sum() == 0

# overall distributioon of content durations
duration_count = df_6.groupby(['type','duration']).size()

print(duration_count['TV Show'].sort_index())
print(duration_count['Movie'].sort_index())
# TV Show and Movie use different ways to measure duration

# correct the index
TV_duration = duration_count['TV Show'].sort_index().reset_index()
TV_duration.columns = ['duration','count']
print(TV_duration)

# split the number and measure
duration_cleaned = []
for i in range(len(TV_duration)):
  d = TV_duration['duration'][i].split(' ')[0]
  duration_cleaned.append(d)
TV_duration['duration'] = duration_cleaned
TV_duration['measure'] = 'season'
TV_duration

TV_duration['duration'] = TV_duration['duration'].astype('Int64')
TV_duration = TV_duration.sort_values('duration')
TV_duration

TV_duration.index = TV_duration['duration']
TV_duration.drop('duration',axis=1,inplace=True)
TV_duration

assert TV_duration['count'].dtype == 'int64'

# Q6 Visualization1
sns.barplot(data=TV_duration,x=TV_duration.index,y='count',color='r',)
plt.xlabel('season')
plt.title('TV Show Duration')
plt.grid(True)
plt.tight_layout();

# Q6 Visualization2
# development: combine duration>=7 as one cat
TV_duration['group'] = TV_duration.index.map(lambda x: str(x) if x<7 else '7+')
TV_grouped = TV_duration.groupby('group')['count'].sum()
#plt.figure(figsize=(12,12))
plt.pie(TV_grouped,labels=TV_grouped.index,autopct='%1.1f%%')
plt.title('TV Show duration (seasons)')
plt.tight_layout();

TV_duration['count'].sum()

Movie_duration = duration_count['Movie'].sort_index().reset_index()
Movie_duration.columns = ['duration','count']

Movie_duration

# split the number and measure
duration_cleaned = []
for i in range(len(Movie_duration)):
  d = Movie_duration['duration'][i].split(' ')[0]
  duration_cleaned.append(d)
Movie_duration['duration'] = duration_cleaned
Movie_duration['measure'] = 'min'
Movie_duration['duration'] = Movie_duration['duration'].astype('Int64')
Movie_duration.sort_values('duration')

Movie_duration.index = Movie_duration['duration']
Movie_duration.drop('duration',axis=1,inplace=True)

Movie_duration = Movie_duration.sort_index()
Movie_duration.head(50)

Movie_duration[Movie_duration['count'] == Movie_duration['count'].max()]

# Q6 Visualizatioon3
sns.lineplot(data=Movie_duration,x=Movie_duration.index,y='count',color='b')
plt.xlabel('minute')
plt.title('Movie Duration')
plt.tight_layout();

# Q6 Visualization4
label_ranges = [0,40,60,80,100,120,140,160,np.inf]
labels_names = ['0-40min','41-60min','61-80min','81-100min','101-120min',
                '121-140min','141-160min','160+min']
Movie_duration['range'] = pd.cut(Movie_duration.index,
                                  bins=label_ranges,
                                  labels=labels_names)
plt.pie(Movie_duration.groupby('range')['count'].sum(),
         labels=labels_names,
         autopct='%1.1f%%')
plt.title('Movie Duration (min)')
plt.tight_layout();

"""# Answer to Q6

First of all, we need to mention that Netflix uses fundamentally different measures to record the durations of TV Shows and Movie:

**Movies** are measured in **minutes**

**TV Shows** are measured in **seasons**

So the visualizations are set seperately.

1.What is the overall distribution of content durations?

*   **TV Shows** are evidently right-skewed, the one-season shows accounts for 67% of all TV Shows with the total number 1793, while the total number of TV Shows longer than or equal to 7 seasons only accounts for 2.5%. This indicates that mini-series and limited series dominate Netflix's TV content.
*   **Movies** duration follows a near-normal distribution, the mode is 90 minutes (152 in total), peaking arount 80-100 minutes, which aligns with the standard movie industry feature. Interestingly, there's also a secondary peak at 20-29 minutes, which may reflect the emergence of short-form content.

2.Are there differences between Movies and TV Shows in terms of length?

*   Yes -- the difference is both structual and statistical . **Movies** have a tight duration peak in the 80-100 minutes range, and longger movies (>=160 min) form a small right tail. The most common ones are with medium duration (80-120 min). This may show that Movies released by Netflix still follow the traditional industry standard.

*   **TV Shows** exhibit a long-tail distribution, with a small minority extending beyond 7 seasons. This may indicate that shorter serialized TV Shows are more favored now, for its advantage of maxmizing viewer completion and retention.


3.Are there extreme outliers or short-form content?


*   Yes, and the outliers in both TV Shows and Movies are the ones with longer durations.

*   In **TV Shows**, series with 7+ seasons can be considered long-running outliers.

*   In **Movies**, outliers are the extremely long ones, the titles longer than 160 minutes can be considered as outliers. Additionally, the 20-30 min short-form cluster may indicate an emerging content niche.

# **Interpretation Summary**

**TV Shows** are **dominated by short series**, one-season titles accounts for about 70% of the whole population. This may reflect the growing trend toward **mini-series and limited-format storytelling**, theses features mean cost-effective, risk-reduced, and audience-friendly.

**Movies** still **follow the traditional industry-standard routine**, the movies lasting 80-120 minutes are still the most popular ones, accounts for over 60% in total. However, the small bump in short-duration films  (20-30 min) may further confirmed the **growing trend of short contents**.

#Overall Summary

**📍 Key findings:**


*   Netflix saw rapid expansion of contents both in TV Shows and Movies from 2015 to 2019, with a decline post-2020 liikely due to the COVID-19 pandemic.
*   United States dominates content origin, but countries India, the United Kingdom, Canada and France are also important contributors.
*   The number of Movies is always larger than the number of TV Shows, but the ratio of TV Shows to Movies exhibit a rising trend, this may reflect the growing interest in TV Shows.
*    Children & Family, Romance, Dramas, Comedies, Crime, Horror, Stand-Up Comedy & Talk Shows, Documentaries, Reality Shows and Sports are the top 10 most popular genre. Aside from the top 2 genres, TV Shows and Movies dominate in different top genres respectively.
*    The number of newly released titles follows a dual-peak pattern, summer (Jul & Aug) and winter (Nov & Dec) holidays witnessed more releases than other months. This pattern also becomes more and more obious over the years.
*    In terms of duration of titles, TV Shows and Movies have different patterns respectively. For TV Shows, the one-season series dominate the filed, while Movies still follow the industry standards, 80-120 minutes is the majority. But the number of Movies lasting 20-30 minutes are  higher than normal, this may again suggest the trend of short-duration contents.
"""
